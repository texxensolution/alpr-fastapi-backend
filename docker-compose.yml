version: "3.9"  # specify the version of docker-compose

services:
  # PostgreSQL service
  db:
    image: postgres:13  # PostgreSQL version 13
    container_name: postgres-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}  # The default PostgreSQL username
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # The default PostgreSQL password
      POSTGRES_DB: ${POSTGRES_DB} # The default database name
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persists data between container restarts
    ports:
      - "5432:5432"  # Exposes PostgreSQL on port 5432
    networks:
      - app-network

  # FastAPI service
  app:
    build: .
    container_name: fastapi-app
    env_file:
      - .env
    environment:
      DB_HOST: db  # The PostgreSQL container name (defined above) is used to reference the database
      DB_PORT: 5432  # PostgreSQL default port
      DB_USER: ${POSTGRES_USER} # The PostgreSQL user
      DB_PASSWORD: ${POSTGRES_PASSWORD} # The PostgreSQL password
      DB_NAME: ${POSTGRES_DB} # The PostgreSQL database name
      REDIS_HOST: redis  # Redis service name for communication
      REDIS_PORT: 6379  # Redis default port
    ports:
      - "8000:8000"  # Exposes FastAPI on port 8000
    depends_on:
      - db  # Ensures FastAPI starts after the database is ready
      - redis  # Ensures FastAPI starts after Redis is ready
    volumes:
      - uploads_data:/app/uploads  # Mounts the host directory to /uploads in the container for file persistence
    networks:
      - app-network

  # Redis service
  redis:
    image: redis:6  # Redis version 6
    container_name: redis
    ports:
      - "6379:6379"  # Exposes Redis on port 6379
    networks:
      - app-network

  # RQ Worker service
  rq-worker:
    image: python:3.10  # Use a Python base image
    container_name: rq-worker
    command: ["rq", "worker", "default"]  # Start an RQ worker to listen on the 'default' queue
    volumes:
      - .:/app  # Mount the current directory (with your FastAPI app) to the container
    environment:
      REDIS_URL: redis://redis:6379  # Redis URL for the worker to connect to
    depends_on:
      - redis  # Make sure Redis is ready before starting the worker
    networks:
      - app-network

volumes:
  postgres_data:  # Named volume for PostgreSQL data storage
  uploads_data:  # Named volume for FastAPI file uploads persistence

networks:
  app-network:  # Custom network for inter-service communication

